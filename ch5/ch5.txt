1.移位操作符：<<和>> 操作数必须是整型
逻辑移位：左边移入的位用0填充
算术移位：左边移入的位由原先该值的符号位决定
逻辑左移与算术左移是相同的，逻辑右移与算术右移是不同的，而且只有操作数为负数时才不一样。
标准说明无符号数的执行的所有移位操作都是逻辑移位，但是，对于有符号数，采用哪种移位方式
取决于编译器。有符号值的右移位操作是不可移植的。
2.位操作符：& | ^  操作数必须是整型
把指定位置设置为1：value = value | 1 << bit_number
把指定位置设置为0：value = value & 1 << bit_number
对指定位置进行测试：value = value & 1 << bit_number
3.赋值：赋值也是一种表达式，是表达式就有值
连续赋值中个变量各类型的长度不一致导致的截取问题。
复合赋值符：左操作数只求值一次，右操作数在执行复合赋值操作之前即被求值，即使它的优先级
低于复合赋值操作。
尽量使用复合赋值符。
4.
